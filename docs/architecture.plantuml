@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

AddElementTag("microservice", $bgColor="#98fb98", $fontColor="#003300", $borderColor="#32cd32", $legendText="Микросервис")
AddElementTag("frontend", $bgColor="#ffa07a", $fontColor="#330000", $borderColor="#cc5500", $legendText="Frontend")
AddElementTag("gateway", $bgColor="#87ceeb", $fontColor="#002233", $borderColor="#1e90ff", $legendText="API Gateway")
AddElementTag("storage", $bgColor="#ff6347", $fontColor="#330000", $borderColor="#dc143c", $legendText="Хранилище")

Person(user, "Пользователь", "Взаимодействует с веб-приложением")

Component(frontend, "Web Application", "React, SPA", "frontend")

System_Boundary(architecture, "Микросервисная архитектура") {
    Component(envoy, "Envoy", "API Gateway", "gateway")
    
    Component(user_service, "User Service", "Golang", "Управление информацией о пользователях")
    Component(feed_service, "Feed Service", "Golang", "Сервис главной ленты постов")
    Component(blob_service, "Blob Service", "Golang", "Сервис загрузки файлов")
    Component(mod_service, "Moderation Service", "Golang", "Сервис модерации")
    Component(recc_service, "Recommendation Service", "Golang", "Сервис рекомендаций")
    Component(comp_service, "Competitions Service", "Golang", "Сервис конкурсов")
    Component(ads_service, "Ads Service", "Golang", "Сервис рекламы")
    
    Component(redis, "Redis", "Кэш и временное хранилище данных", "storage")
}

' Связи
Rel(user, frontend, "Использует", "HTTPS")
Rel(frontend, envoy, "API запросы", "REST/HTTPS")
Rel(envoy, user_service, "Маршрутизация запросов", "gRPC")
Rel(envoy, feed_service, "Маршрутизация запросов", "gRPC")
Rel(envoy, mod_service, "Маршрутизация запросов", "gRPC")
Rel(envoy, recc_service, "Маршрутизация запросов", "gRPC")
Rel(envoy, comp_service, "Маршрутизация запросов", "gRPC")
Rel(envoy, ads_service, "Маршрутизация запросов", "gRPC")

Rel(user_service, redis, "Кэширование данных", "Redis Protocol")
Rel(feed_service, redis, "Кэширование данных", "Redis Protocol")
Rel(mod_service, "redis", "Кэширование данных", "Redis Protocol")
Rel(recc_service, redis, "Кэширование данных", "Redis Protocol")
Rel(comp_service, redis, "Кэширование данных", "Redis Protocol")
Rel(ads_service, redis, "Кэширование данных", "Redis Protocol")

' Дополнительные связи между сервисами
Rel(recc_service, feed_service, "Информация о рекомендация пользователя", "gRPC")
Rel(feed_service, blob_service, "Загрузка изображений", "gRPC")
Rel(user_service, mod_service, "Информация о пользователе", "gRPC")
@enduml