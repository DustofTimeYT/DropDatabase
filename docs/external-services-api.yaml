openapi: 3.0.4
info:
  title: Pixora
  description: Collection of APIs for external services
  version: 1.0.0
tags:
  - name: Google Analytics
    externalDocs:
      description: Find out more
      url: https://developers.google.com/analytics/devguides/collection/ga4
  - name: Google Cloud Vision
    externalDocs:
      description: Find out more
      url: https://cloud.google.com/vision/docs
  - name: Google Ads
    externalDocs:
      description: Find out more
      url: https://developers.google.com/google-ads/api/docs/start
  - name: Firebase Cloud Messaging
    externalDocs:
      description: Find out more
      url: https://firebase.google.com/docs/cloud-messaging/
  - name: Azure Blob Storage
    externalDocs:
      description: Find out more
      url: https://firebase.google.com/docs/cloud-messaging/
  - name: YooMoney
    externalDocs:
      description: Find out more
      url: https://yookassa.ru/developers
paths:
  /mp/collect:
    post:
      summary: Send measurement events
      tags:
        - Google Analytics
      security:
        - GoogleAnalyticsOAuth2: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GACollectRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GAEvent"
        "400":
          description: BadRequest
        "403":
          description: Unauthorized

  /properties/{property_id}:runReport:
    post:
      summary: Create report
      tags:
        - Google Analytics
      security:
        - GoogleAnalyticsOAuth2: []
      parameters:
        - in: path
          name: property_id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GARunReportRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GARunReportResponse"
        "400":
          description: BadRequest
        "403":
          description: Unauthorized

  /images:annotate:
    post:
      summary: Annotate image
      tags:
        - Google Cloud Vision
      security:
        - GoogleAnalyticsOAuth2: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GCVAnnotateImageRequest"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCVAnnotateImageResponse'
                
  /customers/{customerId}/campaigns:
    post:
      summary: Create Campaign
      tags:
        - Google Ads
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/developerToken'
        - $ref: '#/components/parameters/loginCustomerId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
      responses:
        '200':
          description: Campaign created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
    get:
      summary: List Campaigns
      tags:
        - Google Ads
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/developerToken'
        - $ref: '#/components/parameters/loginCustomerId'
      responses:
        '200':
          description: List of campaigns
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campaign'

  /customers/{customerId}/adGroups:
    post:
      summary: Create Ad Group
      tags:
        - Google Ads
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/developerToken'
        - $ref: '#/components/parameters/loginCustomerId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdGroup'
      responses:
        '200':
          description: Ad Group created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdGroup'
    get:
      summary: List Ad Groups
      tags:
        - Google Ads
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/developerToken'
        - $ref: '#/components/parameters/loginCustomerId'
      responses:
        '200':
          description: List of ad groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdGroup'

  /customers/{customerId}/ads:
    post:
      summary: Create Ad
      tags:
        - Google Ads
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/developerToken'
        - $ref: '#/components/parameters/loginCustomerId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ad'
      responses:
        '200':
          description: Ad created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
    get:
      summary: List Ads
      tags:
        - Google Ads
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/developerToken'
        - $ref: '#/components/parameters/loginCustomerId'
      responses:
        '200':
          description: List of ads
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ad'

  /v1/projects/{project_id}/messages:send:
    post:
      summary: Send a push notification message
      tags:
        - Firebase Cloud Messaging
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
          description: Firebase project ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
            example:
              message:
                token: "DEVICE_REGISTRATION_TOKEN"
                notification:
                  title: "Notification Title"
                  body: "Notification Body"
                data:
                  key1: "value1"
                  key2: "value2"
      responses:
        '200':
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMessageResponse'
              example:
                name: "projects/your-project-id/messages/123456789"
        '400':
          description: Invalid request
        '401':
          description: Unauthorized (invalid or missing authentication)
        '403':
          description: Permission denied
        '500':
          description: Internal server error
          
  /{containerName}/{blobName}:
    put:
      summary: Upload Blob
      tags:
        - Azure Blob Storage
      parameters:
        - $ref: '#/components/parameters/containerName'
        - $ref: '#/components/parameters/blobName'
        - $ref: '#/components/parameters/xMsVersion'
        - $ref: '#/components/parameters/xMsDate'
        - in: header
          name: x-ms-blob-type
          schema:
            type: string
            enum: [BlockBlob, PageBlob, AppendBlob]
          required: true
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: Blob created
      security: []
    get:
      summary: Download Blob
      tags:
        - Azure Blob Storage
      parameters:
        - $ref: '#/components/parameters/containerName'
        - $ref: '#/components/parameters/blobName'
        - $ref: '#/components/parameters/xMsVersion'
        - $ref: '#/components/parameters/xMsDate'
      responses:
        '200':
          description: Blob content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security: []
    delete:
      summary: Delete Blob
      tags:
        - Azure Blob Storage
      parameters:
        - $ref: '#/components/parameters/containerName'
        - $ref: '#/components/parameters/blobName'
        - $ref: '#/components/parameters/xMsVersion'
        - $ref: '#/components/parameters/xMsDate'
      responses:
        '202':
          description: Blob deleted
      security: []

  /payments:
    post:
      summary: Create payment
      tags:
        - YooMoney
      security:
        - YooMoneyAuth: []
      parameters:
        - in: header
          name: Idempotence-Key
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/YMCreatePaymentRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/YMCreatePaymentResponse"
        "400":
          description: BadRequest
        "403":
          description: Unauthorized

components:
  securitySchemes:
    YooMoneyAuth:
      type: http
      scheme: basic
    GoogleAnalyticsOAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: "https://accounts.google.com/o/oauth2/v2/auth"
          tokenUrl: "https://accounts.google.com/o/oauth2/token"
          scopes:
            read: read access
            write: write access
  parameters:
    containerName:
      name: containerName
      in: path
      required: true
      schema:
        type: string
    blobName:
      name: blobName
      in: path
      required: true
      schema:
        type: string
    restypeContainer:
      name: restype
      in: query
      required: true
      schema:
        type: string
        enum: [container]
    compList:
      name: comp
      in: query
      required: true
      schema:
        type: string
        enum: [list]
    xMsVersion:
      name: x-ms-version
      in: header
      required: true
      schema:
        type: string
        example: "2023-08-03"
    xMsDate:
      name: x-ms-date
      in: header
      required: true
      schema:
        type: string
        format: date-time
        example: "Wed, 21 Oct 2023 07:28:00 GMT"
    customerId:
      name: customerId
      in: path
      required: true
      schema:
        type: string
        example: "1234567890"
    developerToken:
      name: developer-token
      in: header
      required: true
      schema:
        type: string
    loginCustomerId:
      name: login-customer-id
      in: header
      schema:
        type: string
        example: "0987654321"
  schemas:
    Campaign:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          example: "Summer Sale Campaign"
        status:
          type: string
          enum: [ENABLED, PAUSED, REMOVED]
          example: "ENABLED"
        budget:
          type: integer
          example: 5000000  # $5 in micros
      required: [name, status, budget]

    AdGroup:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          example: "Electronics Ad Group"
        campaignId:
          type: string
          example: "123456789"
        status:
          type: string
          enum: [ENABLED, PAUSED, REMOVED]
          example: "ENABLED"
      required: [name, campaignId, status]

    Ad:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        finalUrls:
          type: array
          items:
            type: string
          example: ["https://example.com"]
        headlines:
          type: array
          items:
            type: string
          example: ["Summer Sale", "Up to 50% Off"]
        descriptions:
          type: array
          items:
            type: string
          example: ["Limited time offer", "Shop now!"]
        status:
          type: string
          enum: [ENABLED, PAUSED, REMOVED]
          example: "ENABLED"
      required: [finalUrls, headlines, descriptions, status]
    GARunReportRequest:
      type: object
      properties:
        dimensions:
          type: array
          items:
            $ref: "#/components/schemas/GADimension"
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/GAMetric"
        dateRanges:
          type: array
          items:
            $ref: "#/components/schemas/GADateRange"
    GARunReportResponse:
      type: object
      properties:
        rowCount:
          type: integer
        rows:
          type: array
          items:
            type: object
            properties:
              dimensionValues:
                type: array
                items:
                  $ref: "#/components/schemas/GADimensionValue"
              matricsValues:
                type: array
                items:
                  $ref: "#/components/schemas/GAMetricValue"
    GACollectRequest:
      type: object
      required:
        - client_id
      properties:
        client_id:
          type: string
          description: A unique identifier for a client
        user_id:
          type: string
          description: A unique identifier for a user
        events:
          type: array
          items:
            $ref: "#/components/schemas/GAEvent"
    GAEvent:
      type: object
      required:
        - name
        - params
      properties:
        name:
          type: string
        params:
          type: array
          items:
            type: object
    GADimension:
      type: object
      properties:
        name:
          type: string
    GADimensionValue:
      type: object
      properties:
        value:
          type: string
    GAMetric:
      type: object
      properties:
        name:
          type: string
    GAMetricValue:
      type: object
      properties:
        value:
          type: string
    GADateRange:
      type: object
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
    GCVAnnotateImageRequest:
      type: object
      properties:
        image:
          type: object
          properties:
            content:
              type: string
              format: base64
        features:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: "SAFE_SEARCH_DETECTION"
    GCVAnnotateImageResponse:
      type: object
      properties:
        responses:
          type: array
          items:
            type: object
            properties:
              safeSearchAnnotation:
                type: object
                properties:
                  adult:
                    $ref: '#/components/schemas/GCVLikelihood'
                  spoof:
                    $ref: '#/components/schemas/GCVLikelihood'
                  medical:
                    $ref: '#/components/schemas/GCVLikelihood'
                  violence:
                    $ref: '#/components/schemas/GCVLikelihood'
                  racy:
                    $ref: '#/components/schemas/GCVLikelihood'
    GCVLikelihood:
      type: string
      enum:
        - VERY_LIKELY
        - LIKELY
        - POSSIBLE
        - UNLIKELY
        - VERY_UNLIKELY
        - UNKNOWN
    SendMessageRequest:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
      required:
        - message
    Message:
      type: object
      properties:
        token:
          type: string
          description: Device registration token
        topic:
          type: string
          description: Topic name (alternative to token)
        notification:
          $ref: '#/components/schemas/Notification'
        data:
          type: object
          additionalProperties:
            type: string
          description: Custom key-value pairs
        android:
          $ref: '#/components/schemas/AndroidConfig'
        apns:
          $ref: '#/components/schemas/APNSConfig'
        webpush:
          $ref: '#/components/schemas/WebpushConfig'
    Notification:
      type: object
      properties:
        title:
          type: string
          description: Notification title
        body:
          type: string
          description: Notification body
        image:
          type: string
          description: URL of notification image

    AndroidConfig:
      type: object
      properties:
        priority:
          type: string
          enum: [NORMAL, HIGH]
          default: HIGH
        ttl:
          type: string
          description: Time-to-live duration
        collapse_key:
          type: string
          description: Collapse key for message
    APNSConfig:
      type: object
      properties:
        headers:
          type: object
          properties:
            apns-priority:
              type: string
              enum: ["5", "10"]
              default: "10"
        payload:
          type: object
          properties:
            aps:
              type: object
              properties:
                alert:
                  type: object
                  properties:
                    title:
                      type: string
                    body:
                      type: string
    WebpushConfig:
      type: object
      properties:
        headers:
          type: object
          properties:
            TTL:
              type: string
              description: Time-to-live duration
        notification:
          type: object
          properties:
            title:
              type: string
            body:
              type: string
            icon:
              type: string
    SendMessageResponse:
      type: object
      properties:
        name:
          type: string
          description: Message identifier
    ContainerEnumerationResults:
      type: object
      properties:
        Containers:
          type: array
          items:
            $ref: '#/components/schemas/Container'
        NextMarker:
          type: string
      xml:
        name: 'EnumerationResults'
    Container:
      type: object
      properties:
        Name:
          type: string
        Properties:
          $ref: '#/components/schemas/ContainerProperties'
      xml:
        name: 'Container'
    ContainerProperties:
      type: object
      properties:
        Last-Modified:
          type: string
          format: date-time
        Etag:
          type: string
      xml:
        name: 'Properties'
    BlobEnumerationResults:
      type: object
      properties:
        Blobs:
          type: array
          items:
            $ref: '#/components/schemas/Blob'
        NextMarker:
          type: string
      xml:
        name: 'EnumerationResults'
    Blob:
      type: object
      properties:
        Name:
          type: string
        Properties:
          $ref: '#/components/schemas/BlobProperties'
      xml:
        name: 'Blob'
    BlobProperties:
      type: object
      properties:
        Last-Modified:
          type: string
          format: date-time
        Etag:
          type: string
        Content-Length:
          type: integer
      xml:
        name: 'Properties'
    YMCreatePaymentRequest:
      type: object
      properties:
        amount:
          $ref: "#/components/schemas/YMMoney"
        description:
          type: string
        confirmation:
          type: object
          properties:
            type:
              type: string
              example: "redirect"
            return_url:
              type: string
    YMCreatePaymentResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type: string
        status:
          type: string
          example: "pending"
          enum:
            - pending
            - waiting_for_capture
            - succeeded
            - cancelled
        paid:
          type: boolean
          example: false
        amount:
          $ref: "#/components/schemas/YMMoney"
        created_at:
          type: string
          format: date-time
    YMMoney:
      type: object
      properties:
        value:
          type: number
          example: 100.00
        currency:
          type: string
          example: "RUB"
